version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: pusula-postgres
    environment:
      POSTGRES_DB: pusula
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-pusula}"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  api:
    image: enes3453/pusula-obs:0.0.1
    container_name: pusula-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__Default: "Host=db;Port=5432;Database=pusula;Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-postgres}"

    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || wget -qO- http://localhost:8080 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  ui:
    image: enes3453/pusula-ui:0.0.1
    container_name: pusula-ui
    depends_on:
      api:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ASPNETCORE_URLS: "http://+:8081"
      ApiBaseUrl: "http://api:8080"
    ports:
      - "8081:8081"   
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8081 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20
    restart: unless-stopped

volumes:
  db_data:
